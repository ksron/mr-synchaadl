
--- Symbolic expressions, composed of variables and concrete values.
fmod SMT-EXP is
  including EXP .
  protecting NAT .
  including META-TERM .
  including META-LEVEL .

  sorts SMTVar SMTValue SMTExp .
  subsort SMTValue SMTVar < SMTExp < Exp .

  --- return the index of a variable
  op getIndex : SMTVar ~> Nat [format (m! o)] .
  op trAtom : Term -> TermQid [memo] .
endfm

--- Boolean expressions
fmod SMT-BOOL-EXP is
  protecting STRING .
  protecting SMT-Check .
  including BOOL-EXP .
  including SMT-EXP .
  including META-TERM .
  including META-LEVEL .

  sort SMTBoolExp .
  subsort SMTBoolExp < BoolExp SMTExp .

  var N : Nat .
  var S : String .
  var B : Bool .

--- boolean variables in constraints
  sort SMTBoolVar .
  subsort SMTBoolVar < SMTVar SMTBoolExp .
  op b : Nat -> SMTBoolVar [ctor] .
  op b : String Nat -> SMTBoolVar [ctor] .

  eq getIndex(b(N)) = N .
  eq getIndex(b(S, N)) = N .

--- Boolean constants, enclosed by [_]
  sort SMTBoolValue .
  subsort SMTBoolValue < SMTValue SMTBoolExp .
  op [_] : Boolean -> SMTBoolValue [ctor] .

  sort Boolean? .
  subsort Boolean < Boolean? .
  op errorBoolean : -> Boolean? [ctor] .

  eq trAtom('true.Bool)  =  'true.Boolean .
  eq trAtom('false.Bool) = 'false.Boolean .

  eq bool(B) = [downTerm(trAtom(upTerm(B)), errorBoolean)] .
endfm

--- Real expressions.
--- We consider SMT theories over reals with rational constants. That is,
--- every concrete value is actually a rational constant, but a variable can
--- have a real valuation.
fmod SMT-REAL-EXP is
  including REAL-EXP .
  protecting SMT-BOOL-EXP .
  protecting CONVERSION .
  protecting SMT-Check .
  including META-TERM .
  including META-LEVEL .

  sort SMTRealExp .
  subsort SMTRealExp < RealExp SMTExp .

  var N : Nat .
  var S : String .
  var R : Rat .
  var F : Float .

--- real variables in constraints
  sort SMTRealVar .
  subsort SMTRealVar < SMTVar SMTRealExp .
  op r : Nat -> SMTRealVar [ctor] .
  op r : String Nat -> SMTRealVar [ctor] .

  eq getIndex(r(N)) = N .
  eq getIndex(r(S, N)) = N .

--- rational constants, enclosed by [_]
  sort SMTRealValue .
  subsort SMTRealValue < SMTValue SMTRealExp .
  op [_] : Real -> SMTRealValue [ctor] .

  sort Real? .
  subsort Real < Real? .
  op errorReal : -> Real? [ctor] .

  sort Nat? .
  subsort Nat < Nat? .
  op errorNat : -> Nat? [ctor] .

  vars T T' : Term .

  eq trAtom('_/_[T,T'])= qid(string(downTerm(T,errorNat),10) + "/" + string(downTerm(T',errorNat),10) + ".Real") .
  eq trAtom(T) = qid(string(downTerm(T,errorNat),10) + "/1.Real") [owise] .

  eq real(R) = [downTerm(trAtom(upTerm(R)), errorReal)] .
  eq real(F) = [downTerm(trAtom(upTerm(rat(F))), errorReal)] .

endfm

fmod SMT-UNIT-EXP is
  including UNIT-EXP .
  protecting SMT-BOOL-EXP .

  sort SMTUnitValue .
  subsort SMTUnitValue < SMTValue UnitExp < Exp .
  op * : -> SMTUnitValue [ctor] .  --- for event
endfm
