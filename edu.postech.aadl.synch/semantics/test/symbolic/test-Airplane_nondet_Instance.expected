==========================================
reduce in AIRPLANE_NONDET_INSTANCE-MODEL-SYMBOLIC : initialize(initial) .
rewrites: 627
result Object: < AirplanenondetInstance : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [2] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : (< yawAngle : Data | properties :
    DataModel::InitialValue => {{0.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < dirAngle : Data | properties :
    DataModel::InitialValue => {{0.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < rollAngle : Data | properties
    : DataModel::InitialValue => {{0.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    0] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [5/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) >
==========================================
rewrite [5] in AIRPLANE_NONDET_INSTANCE-MODEL-SYMBOLIC : {bool(true) ||
    initialize(initial) | 0 | infty} .
rewrites: 142074
result GlobalSystem: {[true] || < AirplanenondetInstance : System | properties
    : ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {
    {true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}
==========================================
search [, 5] in AIRPLANE_NONDET_INSTANCE-MODEL-SYMBOLIC : {bool(true) ||
    initialize(initial) | 0 | infty} =>* G:GlobalSystem .

Solution 1 (state 0)
states: 1  rewrites: 628
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [2] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : (< yawAngle : Data | properties :
    DataModel::InitialValue => {{0.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < dirAngle : Data | properties :
    DataModel::InitialValue => {{0.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < rollAngle : Data | properties
    : DataModel::InitialValue => {{0.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    0] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [5/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 0 |
    infty}

Solution 2 (state 1)
states: 2  rewrites: 29762
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    2] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < goaldirection : DataOutPort | properties : none,content : [0] # [false]
    >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 60 |
    infty}

Solution 3 (state 2)
states: 3  rewrites: 30841
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    2] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < goaldirection : DataOutPort | properties : none,content : [0] # [false]
    >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 60 |
    infty}

Solution 4 (state 3)
states: 4  rewrites: 31920
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    2] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [true] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 60 |
    infty}

Solution 5 (state 4)
states: 5  rewrites: 59928
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 6 (state 5)
states: 6  rewrites: 60967
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 7 (state 6)
states: 7  rewrites: 62006
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 8 (state 7)
states: 8  rewrites: 95555
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 9 (state 8)
states: 9  rewrites: 96594
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 10 (state 9)
states: 10  rewrites: 97633
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 11 (state 10)
states: 11  rewrites: 131200
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 12 (state 11)
states: 12  rewrites: 132239
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 13 (state 12)
states: 13  rewrites: 133278
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    3/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [3/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 120 |
    infty}

Solution 14 (state 13)
states: 14  rewrites: 162504
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [3/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 15 (state 14)
states: 15  rewrites: 163543
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [3/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 16 (state 15)
states: 16  rewrites: 164582
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [3/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 17 (state 16)
states: 17  rewrites: 198221
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 18 (state 17)
states: 18  rewrites: 199260
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 19 (state 18)
states: 19  rewrites: 200299
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 20 (state 19)
states: 20  rewrites: 233956
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 21 (state 20)
states: 21  rewrites: 234995
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 22 (state 21)
states: 22  rewrites: 236034
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 23 (state 22)
states: 23  rewrites: 265592
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 24 (state 23)
states: 24  rewrites: 266653
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 25 (state 24)
states: 25  rewrites: 267714
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 26 (state 25)
states: 26  rewrites: 301771
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 27 (state 26)
states: 27  rewrites: 302832
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 28 (state 27)
states: 28  rewrites: 303893
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 29 (state 28)
states: 29  rewrites: 337968
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 30 (state 29)
states: 30  rewrites: 339029
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 31 (state 30)
states: 31  rewrites: 340090
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 32 (state 31)
states: 32  rewrites: 370852
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 33 (state 32)
states: 33  rewrites: 371961
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 34 (state 33)
states: 34  rewrites: 373070
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 35 (state 34)
states: 35  rewrites: 407031
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 36 (state 35)
states: 36  rewrites: 408140
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 37 (state 36)
states: 37  rewrites: 409249
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 38 (state 37)
states: 38  rewrites: 443228
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 39 (state 38)
states: 39  rewrites: 444337
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 40 (state 39)
states: 40  rewrites: 445446
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [3/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1] # [true] > < goalangle : DataInPort | properties : none,content : [0] #
    [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 180 |
    infty}

Solution 41 (state 40)
states: 41  rewrites: 473454
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 42 (state 41)
states: 42  rewrites: 474493
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 43 (state 42)
states: 43  rewrites: 475532
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 44 (state 43)
states: 44  rewrites: 509081
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 45 (state 44)
states: 45  rewrites: 510120
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 46 (state 45)
states: 46  rewrites: 511159
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 47 (state 46)
states: 47  rewrites: 544726
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 48 (state 47)
states: 48  rewrites: 545765
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 49 (state 48)
states: 49  rewrites: 546804
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 50 (state 49)
states: 50  rewrites: 576272
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 51 (state 50)
states: 51  rewrites: 577333
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 52 (state 51)
states: 52  rewrites: 578394
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 53 (state 52)
states: 53  rewrites: 612361
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 54 (state 53)
states: 54  rewrites: 613422
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 55 (state 54)
states: 55  rewrites: 614483
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 56 (state 55)
states: 56  rewrites: 648468
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 57 (state 56)
states: 57  rewrites: 649529
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 58 (state 57)
states: 58  rewrites: 650590
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 59 (state 58)
states: 59  rewrites: 681262
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 60 (state 59)
states: 60  rewrites: 682371
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 61 (state 60)
states: 61  rewrites: 683480
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 62 (state 61)
states: 62  rewrites: 717351
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 63 (state 62)
states: 63  rewrites: 718460
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 64 (state 63)
states: 64  rewrites: 719569
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 65 (state 64)
states: 65  rewrites: 753458
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 66 (state 65)
states: 66  rewrites: 754567
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 67 (state 66)
states: 67  rewrites: 755676
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 68 (state 67)
states: 68  rewrites: 783702
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 69 (state 68)
states: 69  rewrites: 784741
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 70 (state 69)
states: 70  rewrites: 785780
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 71 (state 70)
states: 71  rewrites: 819347
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 72 (state 71)
states: 72  rewrites: 820386
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 73 (state 72)
states: 73  rewrites: 821425
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 74 (state 73)
states: 74  rewrites: 855010
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 75 (state 74)
states: 75  rewrites: 856049
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 76 (state 75)
states: 76  rewrites: 857088
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 77 (state 76)
states: 77  rewrites: 886574
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 78 (state 77)
states: 78  rewrites: 887635
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 79 (state 78)
states: 79  rewrites: 888696
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 80 (state 79)
states: 80  rewrites: 922681
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 81 (state 80)
states: 81  rewrites: 923742
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 82 (state 81)
states: 82  rewrites: 924803
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 83 (state 82)
states: 83  rewrites: 958806
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 84 (state 83)
states: 84  rewrites: 959867
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 85 (state 84)
states: 85  rewrites: 960928
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 86 (state 85)
states: 86  rewrites: 991606
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 87 (state 86)
states: 87  rewrites: 992715
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 88 (state 87)
states: 88  rewrites: 993824
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 89 (state 88)
states: 89  rewrites: 1027701
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 90 (state 89)
states: 90  rewrites: 1028810
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 91 (state 90)
states: 91  rewrites: 1029919
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 92 (state 91)
states: 92  rewrites: 1063814
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 93 (state 92)
states: 93  rewrites: 1064923
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 94 (state 93)
states: 94  rewrites: 1066032
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 95 (state 94)
states: 95  rewrites: 1094054
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 96 (state 95)
states: 96  rewrites: 1095097
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 97 (state 96)
states: 97  rewrites: 1096140
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 98 (state 97)
states: 98  rewrites: 1129699
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 99 (state 98)
states: 99  rewrites: 1130742
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 100 (state 99)
states: 100  rewrites: 1131785
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 101 (state 100)
states: 101  rewrites: 1165362
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 102 (state 101)
states: 102  rewrites: 1166405
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 103 (state 102)
states: 103  rewrites: 1167448
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 104 (state 103)
states: 104  rewrites: 1196912
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 105 (state 104)
states: 105  rewrites: 1197975
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 106 (state 105)
states: 106  rewrites: 1199038
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 107 (state 106)
states: 107  rewrites: 1233007
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 108 (state 107)
states: 108  rewrites: 1234070
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 109 (state 108)
states: 109  rewrites: 1235133
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 110 (state 109)
states: 110  rewrites: 1269120
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 111 (state 110)
states: 111  rewrites: 1270183
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 112 (state 111)
states: 112  rewrites: 1271246
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 113 (state 112)
states: 113  rewrites: 1300810
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 114 (state 113)
states: 114  rewrites: 1301875
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 115 (state 114)
states: 115  rewrites: 1302940
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 116 (state 115)
states: 116  rewrites: 1336917
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 117 (state 116)
states: 117  rewrites: 1337982
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 118 (state 117)
states: 118  rewrites: 1339047
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 119 (state 118)
states: 119  rewrites: 1373042
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 120 (state 119)
states: 120  rewrites: 1374107
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 121 (state 120)
states: 121  rewrites: 1375172
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 240 |
    infty}

Solution 122 (state 121)
states: 122  rewrites: 1404492
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 123 (state 122)
states: 123  rewrites: 1405531
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 124 (state 123)
states: 124  rewrites: 1406570
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 125 (state 124)
states: 125  rewrites: 1440215
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 126 (state 125)
states: 126  rewrites: 1441254
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 127 (state 126)
states: 127  rewrites: 1442293
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 128 (state 127)
states: 128  rewrites: 1475956
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 129 (state 128)
states: 129  rewrites: 1476995
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 130 (state 129)
states: 130  rewrites: 1478034
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 131 (state 130)
states: 131  rewrites: 1507598
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 132 (state 131)
states: 132  rewrites: 1508659
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 133 (state 132)
states: 133  rewrites: 1509720
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 134 (state 133)
states: 134  rewrites: 1543783
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 135 (state 134)
states: 135  rewrites: 1544844
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 136 (state 135)
states: 136  rewrites: 1545905
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 137 (state 136)
states: 137  rewrites: 1579986
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 138 (state 137)
states: 138  rewrites: 1581047
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 139 (state 138)
states: 139  rewrites: 1582108
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 140 (state 139)
states: 140  rewrites: 1612876
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 141 (state 140)
states: 141  rewrites: 1613985
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 142 (state 141)
states: 142  rewrites: 1615094
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 143 (state 142)
states: 143  rewrites: 1649061
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 144 (state 143)
states: 144  rewrites: 1650170
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 145 (state 144)
states: 145  rewrites: 1651279
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 146 (state 145)
states: 146  rewrites: 1685264
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 147 (state 146)
states: 147  rewrites: 1686373
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 148 (state 147)
states: 148  rewrites: 1687482
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 149 (state 148)
states: 149  rewrites: 1715604
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 150 (state 149)
states: 150  rewrites: 1716643
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 151 (state 150)
states: 151  rewrites: 1717682
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [1] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 152 (state 151)
states: 152  rewrites: 1751345
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 153 (state 152)
states: 153  rewrites: 1752384
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 154 (state 153)
states: 154  rewrites: 1753423
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 155 (state 154)
states: 155  rewrites: 1787104
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 156 (state 155)
states: 156  rewrites: 1788143
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 157 (state 156)
states: 157  rewrites: 1789182
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 158 (state 157)
states: 158  rewrites: 1818764
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 159 (state 158)
states: 159  rewrites: 1819825
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 160 (state 159)
states: 160  rewrites: 1820886
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 161 (state 160)
states: 161  rewrites: 1854967
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 162 (state 161)
states: 162  rewrites: 1856028
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 163 (state 162)
states: 163  rewrites: 1857089
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 164 (state 163)
states: 164  rewrites: 1891188
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 165 (state 164)
states: 165  rewrites: 1892249
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 166 (state 165)
states: 166  rewrites: 1893310
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [1] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    1] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 167 (state 166)
states: 167  rewrites: 1924084
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 168 (state 167)
states: 168  rewrites: 1925193
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 169 (state 168)
states: 169  rewrites: 1926302
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 170 (state 169)
states: 170  rewrites: 1960275
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 171 (state 170)
states: 171  rewrites: 1961384
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 172 (state 171)
states: 172  rewrites: 1962493
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 173 (state 172)
states: 173  rewrites: 1996484
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 174 (state 173)
states: 174  rewrites: 1997593
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 175 (state 174)
states: 175  rewrites: 1998702
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [1] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 176 (state 175)
states: 176  rewrites: 2026820
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 177 (state 176)
states: 177  rewrites: 2027863
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 178 (state 177)
states: 178  rewrites: 2028906
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [1] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 179 (state 178)
states: 179  rewrites: 2062561
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 180 (state 179)
states: 180  rewrites: 2063604
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 181 (state 180)
states: 181  rewrites: 2064647
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 182 (state 181)
states: 182  rewrites: 2098320
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 183 (state 182)
states: 183  rewrites: 2099363
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 184 (state 183)
states: 184  rewrites: 2100406
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 185 (state 184)
states: 185  rewrites: 2129966
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 186 (state 185)
states: 186  rewrites: 2131029
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 187 (state 186)
states: 187  rewrites: 2132092
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 188 (state 187)
states: 188  rewrites: 2166157
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 189 (state 188)
states: 189  rewrites: 2167220
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 190 (state 189)
states: 190  rewrites: 2168283
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 191 (state 190)
states: 191  rewrites: 2202366
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 192 (state 191)
states: 192  rewrites: 2203429
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 193 (state 192)
states: 193  rewrites: 2204492
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 194 (state 193)
states: 194  rewrites: 2234152
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 195 (state 194)
states: 195  rewrites: 2235217
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 196 (state 195)
states: 196  rewrites: 2236282
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 197 (state 196)
states: 197  rewrites: 2270355
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 198 (state 197)
states: 198  rewrites: 2271420
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 199 (state 198)
states: 199  rewrites: 2272485
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 200 (state 199)
states: 200  rewrites: 2306576
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 201 (state 200)
states: 201  rewrites: 2307641
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 202 (state 201)
states: 202  rewrites: 2308706
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [1] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [1] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 203 (state 202)
states: 203  rewrites: 2960498
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 204 (state 203)
states: 204  rewrites: 2961541
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 205 (state 204)
states: 205  rewrites: 2962584
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < leftgoal :
    DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [0]
    # [true] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [false] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rudderangle : DataInPort | properties : none,content : [0] # [false],
    cache : [1/2] # [true] > < ruddergoal : DataOutPort | properties : none,
    content : [0] # [false] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [true] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    > < rightgoal : DataOutPort | properties : none,content : [0] # [false] > <
    leftgoal : DataOutPort | properties : none,content : [0] # [false] >),
    subcomponents : (< yawAngle : Data | properties : DataModel::InitialValue
    => {{0.0}},features : none,subcomponents : none,connections : empty,value :
    [0] # [true] > < dirAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < rollAngle : Data | properties : DataModel::InitialValue =>
    {{0.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] >),connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 206 (state 205)
states: 206  rewrites: 2996257
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 207 (state 206)
states: 207  rewrites: 2997300
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 208 (state 207)
states: 208  rewrites: 2998343
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : <
    ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 209 (state 208)
states: 209  rewrites: 3032034
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 210 (state 209)
states: 210  rewrites: 3033077
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 211 (state 210)
states: 211  rewrites: 3034120
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{1.0}},features : none,
    subcomponents : none,connections : empty,value : [1] # [true] > < currAngle
    : Data | properties : DataModel::InitialValue => {{2.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [true]
    >),subcomponents : (< diffAngle : Data | properties :
    DataModel::InitialValue => {{1.0}},features : none,subcomponents : none,
    connections : empty,value : [1] # [true] > < currAngle : Data | properties
    : DataModel::InitialValue => {{2.0}},features : none,subcomponents : none,
    connections : empty,value : [0] # [true] > < movingRate : Data | properties
    : DataModel::InitialValue => {{4.0}},features : none,subcomponents : none,
    connections : empty,value : [4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : empty,
    transitions : ((loc([0]) -[on dispatch]-> loc([1]) {skip}) ; (loc([1]) -[
    otherwise]-> loc([5]) {skip}) ; (loc([1]) -[abs(f[goalangle] - c[
    currAngle]) > c[diffAngle]]-> loc([5]) {if((f[goalangle] - c[currAngle]) >=
    [[0]]){c{currAngle} := (c[currAngle] + c[diffAngle])} else {c{currAngle} :=
    (c[currAngle] - c[diffAngle])} end if}) ; loc([5]) -[[[true]]]-> loc([0]) {
    f{currangle} := c[currAngle]}),loopBound : 10,transBound : 10 >,connections
    : ((goalangle --> (ctrlThread .. goalangle)) ; (ctrlThread .. currangle)
    --> currangle) >,connections : ((goalangle --> (ctrlProc .. goalangle)) ; (
    ctrlProc .. currangle) --> currangle) > < mainController : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < rightangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties : none,content : [0] #
    [false] > < goalangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < rightgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [
    -16212958658533785/36028797018963968] # [true] > < leftgoal : DataOutPort |
    properties : DataModel::InitialValue => {{0.0}},content : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 212 (state 211)
states: 212  rewrites: 3063698
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 213 (state 212)
states: 213  rewrites: 3064761
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 214 (state 213)
states: 214  rewrites: 3065824
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 215 (state 214)
states: 215  rewrites: 3099907
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 216 (state 215)
states: 216  rewrites: 3100970
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 217 (state 216)
states: 217  rewrites: 3102033
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 218 (state 217)
states: 218  rewrites: 3136134
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 219 (state 218)
states: 219  rewrites: 3137197
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 220 (state 219)
states: 220  rewrites: 3138260
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    -16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 221 (state 220)
states: 221  rewrites: 3167926
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 222 (state 221)
states: 222  rewrites: 3168991
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 223 (state 222)
states: 223  rewrites: 3170056
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [0] # [true] > < leftgoal : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 224 (state 223)
states: 224  rewrites: 3204135
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 225 (state 224)
states: 225  rewrites: 3205200
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 226 (state 225)
states: 226  rewrites: 3206265
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [-16212958658533785/36028797018963968] # [true] >),subcomponents
    : < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}})
    ; HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 227 (state 226)
states: 227  rewrites: 3240362
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 228 (state 227)
states: 228  rewrites: 3241427
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [10] # [true] >),subcomponents
    : < pilotConsoleProc : Process | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : < pilotConsoleThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties : none,content : [0] #
    [false] >),subcomponents : none,connections : empty,varGen : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

Solution 229 (state 228)
states: 229  rewrites: 3242492
G:GlobalSystem --> {[true] || < AirplanenondetInstance : System | properties :
    ((TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : none,subcomponents : (< turningCtrl : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< pilotgoal :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < currdirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [false] >),subcomponents
    : (< rightWingController : System | properties : ((TimingProperties::Period
    => {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currangle : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < goalangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] >),subcomponents : < ctrlProc
    : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-16212958658533785/36028797018963968] # [true] >),
    subcomponents : (< diffAngle : Data | properties : DataModel::InitialValue
    => {{1.0}},features : none,subcomponents : none,connections : empty,value :
    [1] # [true] > < currAngle : Data | properties : DataModel::InitialValue =>
    {{2.0}},features : none,subcomponents : none,connections : empty,value : [
    0] # [true] > < movingRate : Data | properties : DataModel::InitialValue =>
    {{4.0}},features : none,subcomponents : none,connections : empty,value : [
    4] # [true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rightWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < leftWingController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [0] # [true] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlThread : Thread |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [
    16212958658533785/36028797018963968] # [true] >),subcomponents : (<
    diffAngle : Data | properties : DataModel::InitialValue => {{1.0}},features
    : none,subcomponents : none,connections : empty,value : [1] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.0}},features
    : none,subcomponents : none,connections : empty,value : [0] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{4.0}},
    features : none,subcomponents : none,connections : empty,value : [4] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.leftWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) > < mainController : System | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [false] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [0] # [false] > <
    ruddergoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [0] # [true] > < rightangle : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : DataModel::InitialValue
    => {{0.0}},content : [-16212958658533785/36028797018963968] # [true] > <
    leftgoal : DataOutPort | properties : DataModel::InitialValue => {{0.0}},
    content : [16212958658533785/36028797018963968] # [true] >),subcomponents :
    < ctrlProc : Process | properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< leftangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rudderangle : DataInPort | properties : none,content : [0] # [
    false],cache : [0] # [false] > < ruddergoal : DataOutPort | properties :
    none,content : [0] # [false] > < rightangle : DataInPort | properties :
    none,content : [0] # [false],cache : [0] # [false] > < currdirection :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < rightgoal : DataOutPort | properties : none,content : [0] # [
    false] > < leftgoal : DataOutPort | properties : none,content : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< leftangle : DataInPort | properties : none,content :
    [0] # [false],cache : [0] # [true] > < rudderangle : DataInPort |
    properties : none,content : [0] # [false],cache : [1/2] # [true] > <
    ruddergoal : DataOutPort | properties : none,content : [0] # [false] > <
    rightangle : DataInPort | properties : none,content : [0] # [false],cache :
    [0] # [true] > < currdirection : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [-10] # [true] > < rightgoal : DataOutPort | properties :
    none,content : [0] # [false] > < leftgoal : DataOutPort | properties :
    none,content : [0] # [false] >),subcomponents : (< yawAngle : Data |
    properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < dirAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] > < rollAngle
    : Data | properties : DataModel::InitialValue => {{0.0}},features : none,
    subcomponents : none,connections : empty,value : [0] # [true] >),
    connections : empty,varGen : <
    "AirplanenondetInstance.turningCtrl.mainController.ctrlProc.ctrlThread",0,0
    >,currState : loc([0]),completeStates : loc([0]),variables : ((x : Real) ;
    (y : Real) ; (z : Real) ; (d : Real) ; w : Real),transitions : ((loc([0])
    -[on dispatch]-> loc([6]) {skip}) ; (loc([4]) -[[[true]]]-> loc([0]) {(v{x}
    := minus(c[yawAngle])) ; if(abs(v[x]) > [[1.0]]){(v{d} := (abs(v[x]) * [[
    8.0000000000000004e-1]])) ; if(v[d] > [[3.0e+1]]){v{d} := [[3.0e+1]]} end
    if} else {v{d} := ((v[x] + v[x]) * [[8.0000000000000004e-1]])} end if ; if(
    v[x] < [[0]]){v{d} := minus(v[d])} end if ; f{ruddergoal} := v[d]}) ; loc([
    6]) -[[[true]]]-> loc([4]) {(v{x} := (f[goalangle] - c[dirAngle])) ; (v{y}
    := ((v[x] * [[4.0000000000000002e-1]]) - c[rollAngle])) ; if(abs(v[y]) > [[
    1.5]]){if(v[y] >= [[0]]){v{d} := (c[rollAngle] + [[1.5]])} else {v{d} := (
    c[rollAngle] - [[1.5]])} end if} else {v{d} := (v[x] * [[
    3.2000000000000001e-1]])} end if ; (v{z} := (v[d] - c[rollAngle])) ; if(
    abs(v[z]) > [[1.0]]){(v{w} := (abs(v[z]) * [[2.9999999999999999e-1]])) ;
    if(v[w] > [[4.5e+1]]){v{w} := [[4.5e+1]]} end if} else {v{w} := ((v[z] + v[
    z]) * [[2.9999999999999999e-1]])} end if ; if(v[z] < [[0]]){v{w} := minus(
    v[w])} end if ; (f{rightgoal} := v[w]) ; f{leftgoal} := minus(v[w])}),
    loopBound : 10,transBound : 10 >,connections : ((leftangle --> (ctrlThread
    .. leftangle)) ; (rudderangle --> (ctrlThread .. rudderangle)) ; (
    rightangle --> (ctrlThread .. rightangle)) ; (goalangle --> (ctrlThread ..
    goalangle)) ; ((ctrlThread .. ruddergoal) --> ruddergoal) ; ((ctrlThread ..
    currdirection) --> currdirection) ; ((ctrlThread .. rightgoal) -->
    rightgoal) ; (ctrlThread .. leftgoal) --> leftgoal) >,connections : ((
    leftangle --> (ctrlProc .. leftangle)) ; (rudderangle --> (ctrlProc ..
    rudderangle)) ; (rightangle --> (ctrlProc .. rightangle)) ; (goalangle -->
    (ctrlProc .. goalangle)) ; ((ctrlProc .. ruddergoal) --> ruddergoal) ; ((
    ctrlProc .. currdirection) --> currdirection) ; ((ctrlProc .. rightgoal)
    --> rightgoal) ; (ctrlProc .. leftgoal) --> leftgoal) > <
    rudderWingController : System | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (< currangle
    : DataOutPort | properties : DataModel::InitialValue => {{0.0}},content : [
    1/2] # [true] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [false] >),subcomponents : < ctrlProc : Process |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currangle :
    DataOutPort | properties : none,content : [0] # [false] > < goalangle :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] >),subcomponents : < ctrlThread : Thread | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currangle : DataOutPort | properties : none,content :
    [0] # [false] > < goalangle : DataInPort | properties : none,content : [0]
    # [false],cache : [0] # [true] >),subcomponents : (< diffAngle : Data |
    properties : DataModel::InitialValue => {{5.0e-1}},features : none,
    subcomponents : none,connections : empty,value : [1/2] # [true] > <
    currAngle : Data | properties : DataModel::InitialValue => {{2.5}},features
    : none,subcomponents : none,connections : empty,value : [1/2] # [true] > <
    movingRate : Data | properties : DataModel::InitialValue => {{3.0}},
    features : none,subcomponents : none,connections : empty,value : [3] # [
    true] >),connections : empty,varGen : < "AirplanenondetInstance.turningCtrl.rudderWingController.ctrlProc.ctrlThread",0,0 >,currState : loc([0]),
    completeStates : loc([0]),variables : empty,transitions : ((loc([0]) -[on
    dispatch]-> loc([1]) {skip}) ; (loc([1]) -[otherwise]-> loc([5]) {skip}) ;
    (loc([1]) -[abs(f[goalangle] - c[currAngle]) > c[diffAngle]]-> loc([5]) {
    if((f[goalangle] - c[currAngle]) >= [[0]]){c{currAngle} := (c[currAngle] +
    c[diffAngle])} else {c{currAngle} := (c[currAngle] - c[diffAngle])} end
    if}) ; loc([5]) -[[[true]]]-> loc([0]) {f{currangle} := c[currAngle]}),
    loopBound : 10,transBound : 10 >,connections : ((goalangle --> (ctrlThread
    .. goalangle)) ; (ctrlThread .. currangle) --> currangle) >,connections : (
    (goalangle --> (ctrlProc .. goalangle)) ; (ctrlProc .. currangle) -->
    currangle) >),connections : ((pilotgoal --> (mainController .. goalangle))
    ; ((rightWingController .. currangle) --> (mainController .. rightangle)) ;
    ((leftWingController .. currangle) --> (mainController .. leftangle)) ; ((
    mainController .. ruddergoal) --> (rudderWingController .. goalangle)) ; ((
    mainController .. currdirection) --> currdirection) ; ((mainController ..
    rightgoal) --> (rightWingController .. goalangle)) ; ((mainController ..
    leftgoal) --> (leftWingController .. goalangle)) ; (rudderWingController ..
    currangle) --> (mainController .. rudderangle)) > < pilotConsole : System |
    properties : ((TimingProperties::Period => {{60}}) ;
    HybridSynchAADL::Synchronous => {{true}}),features : (< currdirection :
    DataInPort | properties : none,content : [0] # [false],cache : [0] # [
    false] > < goaldirection : DataOutPort | properties :
    DataModel::InitialValue => {{0.0}},content : [-10] # [true] >),
    subcomponents : < pilotConsoleProc : Process | properties : ((
    TimingProperties::Period => {{60}}) ; HybridSynchAADL::Synchronous => {{
    true}}),features : (< currdirection : DataInPort | properties : none,
    content : [0] # [false],cache : [0] # [false] > < goaldirection :
    DataOutPort | properties : none,content : [0] # [false] >),subcomponents :
    < pilotConsoleThread : Thread | properties : ((TimingProperties::Period =>
    {{60}}) ; HybridSynchAADL::Synchronous => {{true}}),features : (<
    currdirection : DataInPort | properties : none,content : [0] # [false],
    cache : [0] # [false] > < goaldirection : DataOutPort | properties : none,
    content : [0] # [false] >),subcomponents : none,connections : empty,varGen
    : <
    "AirplanenondetInstance.pilotConsole.pilotConsoleProc.pilotConsoleThread",
    0,0 >,currState : loc([3]),completeStates : loc([3]),variables : empty,
    transitions : ((loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    0.0]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := [[
    1.0e+1]]}) ; (loc([2]) -[[[true]]]-> loc([3]) {f{goaldirection} := minus([[
    1.0e+1]])}) ; loc([3]) -[on dispatch]-> loc([2]) {skip}),loopBound : 10,
    transBound : 10 >,connections : ((currdirection --> (pilotConsoleThread ..
    currdirection)) ; (pilotConsoleThread .. goaldirection) --> goaldirection)
    >,connections : ((currdirection --> (pilotConsoleProc .. currdirection)) ;
    (pilotConsoleProc .. goaldirection) --> goaldirection) >),connections : (((
    turningCtrl .. currdirection) --> (pilotConsole .. currdirection)) ; (
    pilotConsole .. goaldirection) --> (turningCtrl .. pilotgoal)) > | 300 |
    infty}

No more solutions.
states: 229  rewrites: 4177494
Bye.
